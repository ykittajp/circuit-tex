#+TITLE: Asymptoteで回路図を描いた話

3年前に作成していた文書で回路図を描く必要があり，Asymptoteで回路図を頑張って書こうとしたお話です．

** LaTeXにおける図形描画
本題に入る前にAsymptoteとTikZの説明をします．テキストベースで，LaTeXまわりで図形を描画するツールとして，Asymptote，TikZがあります (ちなみにAsymptoteは美文書5版，TikZは美文書6版で取り上げられています)．それぞれの特徴を簡単に挙げます．

 - Asymptote
   - =asy= コマンドで実行
   - 内部でLaTeXコマンドを呼びだすが，インターフェイスとしては独立
     - LaTeXコードに埋め込めるようなパッケージも存在していたはず
   - C++のようなソースコード，独立した画像を出力
 - TikZ
   - tikzパッケージをインクルードして実行
     - e-TeX拡張の処理系が必要
   - LaTeXソースコードに埋め込む
   - ソースコードはTeXマクロ
   - beamerのアニメーションを描く時に便利

私個人的には，
  - ベタなTeXマクロでなく，Asymptoteの方が書きやすい/読みやすい
  - TeXと分離して処理できる
    - 例えば，TeXに出力するのではなくHTMLに埋め込む時にも取り回しが楽
という理由で好きだったのですが，最近はTikZの方が流行っているように見えます．そもそもAsymptoteがどれほど流行ったのか知りませんが．

*** とても簡単なサンプル
どちらも長方形を描く例です．サンプルなのでまどろっこしく書いています．

- Asymptote
#+BEGIN_SRC asymptote :file asy.png :exports both
  void drawRectangle(real x, real y, real w, real h) {
    draw((x,y)--(x+w,y)--(x+w,y+h)--(x,y+h)--cycle);
  }

  drawRectangle(0, 0, 100, 100);
#+END_SRC

- TikZ
#+BEGIN_SRC tex
  \begin{tikzpicture}
    \draw (0, 0) -- (100, 0) -- (100, 100) -- (0, 100) -- cycle;
  \end{tikzpicture}
#+END_SRC

** なぜAsymptoteで描いた?
当時TikZはあったかもしれないですが，私は存在を知りませんでした．どのみち，e-TeX拡張非対応の処理系(TeXLive 2010)も使っていたので使用できなかったと思います．

** 実装
確か長方形や円などはプリミティブで書くコマンドがあったかと思いますが関数で自前で書きなおしています．抵抗やら電圧源などは，パラメータがあって少し複雑に見えますが，ただひたすらベタに書いてます．
垂直・水平方向にもパラメータで対応するようにしています．関数では描画の終了した点を返すようにしてパスを書きやすくしています．

** ちなみにTikZでは?
回路図を書くパッケージがいくつかあります．この例では =circuitikz= を利用しています．
...簡単ですね．

** おわりに
確かにTikZの方がパッケージも充実しているのですが，記述性の方はAsymptoteの方が良いように感じるんですが，どうでしょうか．

ちゃんと確認していないのですが，この記事を書こうと思って探してみたらAsymptoteにもそれっぽいパッケージがありました．車輪の再発明はよくないですねぇ...

http://sourceforge.net/p/asymptote/patches/14/
